{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Home","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Main__WEBPACK_IMPORTED_MODULE_3__","_components_AboutMe__WEBPACK_IMPORTED_MODULE_4__","_ref","data","projects","writing","a","createElement","className","edges","length","map","_ref2","node","key","fields","slug","to","frontmatter","title","date","timeToRead","description","_ref3"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,0BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAMe,SAASI,EAATS,GAAwB,IAARC,EAAQD,EAARC,KACrBC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,OACET,EAAAU,EAAAC,cAACR,EAAA,EAAD,CAAMS,UAAU,QACdZ,EAAAU,EAAAC,cAACN,EAAA,EAAD,MACAL,EAAAU,EAAAC,cAACP,EAAA,EAAD,CAAMQ,UAAU,YACbJ,EAASK,MAAMC,OAAS,GACvBd,EAAAU,EAAAC,cAAA,WAASC,UAAU,eACjBZ,EAAAU,EAAAC,cAAA,UAAQC,UAAU,uBAChBZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,6BAAd,aAEFZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,yBACXJ,EAASK,MAAME,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBjB,EAAAU,EAAAC,cAAA,MAAIO,IAAKD,EAAKE,OAAOC,MACnBpB,EAAAU,EAAAC,cAAA,WAASC,UAAU,WACjBZ,EAAAU,EAAAC,cAAA,UAAQC,UAAU,mBAChBZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,kBACZZ,EAAAU,EAAAC,cAACT,EAAA,EAAD,CAAMmB,GAAIJ,EAAKE,OAAOC,MACnBH,EAAKK,YAAYC,QAGtBvB,EAAAU,EAAAC,cAAA,SAAOC,UAAU,iBACdK,EAAKK,YAAYE,KADpB,MAC6BP,EAAKQ,WADlC,QAIFzB,EAAAU,EAAAC,cAAA,KAAGC,UAAU,wBACVK,EAAKK,YAAYI,aAEpB1B,EAAAU,EAAAC,cAAA,cACEX,EAAAU,EAAAC,cAACT,EAAA,EAAD,CACEmB,GAAIJ,EAAKE,OAAOC,KAChBR,UAAU,sBAFZ,oBAabH,EAAQI,MAAMC,OAAS,GACtBd,EAAAU,EAAAC,cAAA,WAASC,UAAU,eACjBZ,EAAAU,EAAAC,cAAA,UAAQC,UAAU,uBAChBZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,6BAAd,YAEFZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,yBACXH,EAAQI,MAAME,IAAI,SAAAY,GAAA,IAAGV,EAAHU,EAAGV,KAAH,OACjBjB,EAAAU,EAAAC,cAAA,MAAIO,IAAKD,EAAKE,OAAOC,MACnBpB,EAAAU,EAAAC,cAAA,WAASC,UAAU,WACjBZ,EAAAU,EAAAC,cAAA,UAAQC,UAAU,mBAChBZ,EAAAU,EAAAC,cAAA,MAAIC,UAAU,kBACZZ,EAAAU,EAAAC,cAACT,EAAA,EAAD,CAAMmB,GAAIJ,EAAKE,OAAOC,MACnBH,EAAKK,YAAYC,QAGtBvB,EAAAU,EAAAC,cAAA,SAAOC,UAAU,iBACdK,EAAKE,OAAOK,KADf,MACwBP,EAAKQ,WAD7B,QAIFzB,EAAAU,EAAAC,cAAA,KAAGC,UAAU,wBACVK,EAAKK,YAAYI,aAEpB1B,EAAAU,EAAAC,cAAA,cACEX,EAAAU,EAAAC,cAACT,EAAA,EAAD,CACEmB,GAAIJ,EAAKE,OAAOC,KAChBR,UAAU,sBAFZ,sBAkBf,IAAMd,EAAK","file":"component---src-pages-index-js-2eecaa7a3454c8dd6fe6.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Page from '../components/Page';\nimport Main from '../components/Main';\nimport AboutMe from '../components/AboutMe';\n\nexport default function Home({ data }) {\n  const { projects, writing } = data;\n  return (\n    <Page className=\"Home\">\n      <AboutMe />\n      <Main className=\"Articles\">\n        {projects.edges.length > 0 && (\n          <section className=\"ArticleList\">\n            <header className=\"ArticleList__header\">\n              <h2 className=\"ArticleList__header-title\">Projects</h2>\n            </header>\n            <ul className=\"ArticleList__articles\">\n              {projects.edges.map(({ node }) => (\n                <li key={node.fields.slug}>\n                  <article className=\"Article\">\n                    <header className=\"Article__header\">\n                      <h3 className=\"Article__title\">\n                        <Link to={node.fields.slug}>\n                          {node.frontmatter.title}\n                        </Link>\n                      </h3>\n                      <small className=\"Article__date\">\n                        {node.frontmatter.date} - {node.timeToRead}min\n                      </small>\n                    </header>\n                    <p className=\"Article__description\">\n                      {node.frontmatter.description}\n                    </p>\n                    <footer>\n                      <Link\n                        to={node.fields.slug}\n                        className=\"Article__read-more\"\n                      >\n                        Read more\n                      </Link>\n                    </footer>\n                  </article>\n                </li>\n              ))}\n            </ul>\n          </section>\n        )}\n        {writing.edges.length > 0 && (\n          <section className=\"ArticleList\">\n            <header className=\"ArticleList__header\">\n              <h2 className=\"ArticleList__header-title\">Writing</h2>\n            </header>\n            <ul className=\"ArticleList__articles\">\n              {writing.edges.map(({ node }) => (\n                <li key={node.fields.slug}>\n                  <article className=\"Article\">\n                    <header className=\"Article__header\">\n                      <h3 className=\"Article__title\">\n                        <Link to={node.fields.slug}>\n                          {node.frontmatter.title}\n                        </Link>\n                      </h3>\n                      <small className=\"Article__date\">\n                        {node.fields.date} - {node.timeToRead}min\n                      </small>\n                    </header>\n                    <p className=\"Article__description\">\n                      {node.frontmatter.description}\n                    </p>\n                    <footer>\n                      <Link\n                        to={node.fields.slug}\n                        className=\"Article__read-more\"\n                      >\n                        Read more\n                      </Link>\n                    </footer>\n                  </article>\n                </li>\n              ))}\n            </ul>\n          </section>\n        )}\n      </Main>\n    </Page>\n  );\n}\n\nexport const query = graphql`\n  fragment PostData on MarkdownRemarkConnection {\n    edges {\n      node {\n        frontmatter {\n          title\n          description\n        }\n        fields {\n          slug\n        }\n        timeToRead\n      }\n    }\n  }\n\n  {\n    projects: allMarkdownRemark(\n      filter: { fields: { category: { eq: \"projects\" } } }\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: 5\n    ) {\n      ...PostData\n      edges {\n        node {\n          frontmatter {\n            date\n          }\n        }\n      }\n    }\n\n    writing: allMarkdownRemark(\n      filter: { fields: { category: { eq: \"writing\" } } }\n      sort: { fields: [fields___date], order: DESC }\n      limit: 5\n    ) {\n      ...PostData\n      edges {\n        node {\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}