{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Main.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Meta.js","webpack:///./src/components/MarkdownPostHeader.js","webpack:///./src/components/MarkdownPostDetails.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Post","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Main__WEBPACK_IMPORTED_MODULE_1__","_components_Meta__WEBPACK_IMPORTED_MODULE_2__","_components_MarkdownPostHeader__WEBPACK_IMPORTED_MODULE_3__","_components_MarkdownPostDetails__WEBPACK_IMPORTED_MODULE_4__","_ref","_data$markdownRemark","data","markdownRemark","html","fields","frontmatter","timeToRead","a","createElement","className","title","date","dangerouslySetInnerHTML","__html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Main","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","Object","assign","id","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SITE_META_QUERY","Meta","description","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","siteMetadata","site","meta","name","content","property","siteUrl","social","twitter","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","lang","_public_static_d_293310180_json__WEBPACK_IMPORTED_MODULE_0__","MarkdownPostHeader","to","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","MarkdownPostDetails","oneOfType","number"],"mappings":"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","file":"component---src-templates-post-js-75698169f2b1f1992fbe.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport Main from '../components/Main';\nimport Meta from '../components/Meta';\nimport MarkdownPostHeader from '../components/MarkdownPostHeader';\nimport MarkdownPostDetails from '../components/MarkdownPostDetails';\n\nexport default function Post({ data }) {\n  const { html, fields, frontmatter, timeToRead } = data.markdownRemark;\n  return (\n    <div className=\"MarkdownPost\">\n      <Meta title={frontmatter.title} />\n      <MarkdownPostHeader />\n      <Main>\n        <article className=\"Container\">\n          <MarkdownPostDetails\n            title={frontmatter.title}\n            date={fields.date}\n            timeToRead={timeToRead}\n          />\n          <div\n            className=\"MarkdownPost__content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </article>\n      </Main>\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query TemplateBlogMarkdown($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        date\n      }\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      timeToRead\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\n\nexport default function Main({ children, ...props }) {\n  return (\n    <main id=\"skip-to-content\" {...props}>\n      {children}\n    </main>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nconst SITE_META_QUERY = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction Meta({ description, title }) {\n  return (\n    <StaticQuery\n      query={SITE_META_QUERY}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const meta = [\n          {\n            name: 'description',\n            content: description || siteMetadata.description,\n          },\n          {\n            property: 'og:url',\n            content: siteMetadata.siteUrl,\n          },\n          {\n            property: 'og:title',\n            content: title || siteMetadata.title,\n          },\n          {\n            property: 'og:description',\n            content: description || siteMetadata.description,\n          },\n          {\n            name: 'twitter:card',\n            content: 'summary',\n          },\n          {\n            name: 'twitter:creator',\n            content: siteMetadata.social.twitter,\n          },\n          {\n            name: 'twitter:title',\n            content: title || siteMetadata.title,\n          },\n          {\n            name: 'twitter:description',\n            content: description || siteMetadata.description,\n          },\n        ];\n        return (\n          <Helmet\n            htmlAttributes={{ lang: 'en' }}\n            title={title || siteMetadata.title}\n            meta={meta}\n          />\n        );\n      }}\n    />\n  );\n}\n\nMeta.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default Meta;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default function MarkdownPostHeader() {\n  return (\n    <header className=\"MarkdownPostHeader\">\n      <Link className=\"MarkdownPostHeader__title\" to=\"/\">\n        Abbey Hart\n      </Link>\n      <nav className=\"MarkdownPostHeader__nav\">\n        <ul className=\"MarkdownPostHeader__links\">\n          <li>\n            <Link className=\"MarkdownPostHeader__link\" to=\"/about\">\n              About\n            </Link>\n          </li>\n          <li>\n            <Link className=\"MarkdownPostHeader__link\" to=\"/writing\">\n              Writing\n            </Link>\n          </li>\n          <li>\n            <Link className=\"MarkdownPostHeader__link\" to=\"/projects\">\n              Projects\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction MarkdownPostDetails({ title, date, timeToRead }) {\n  return (\n    <header className=\"MarkdownPostDetails\">\n      <h1 className=\"MarkdownPostDetails__title\">{title}</h1>\n      <small className=\"MarkdownPostDetails__date\">\n        {date} — {timeToRead}min\n      </small>\n    </header>\n  );\n}\n\nMarkdownPostDetails.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.oneOfType([\n    PropTypes.number.isRequired,\n    PropTypes.string.isRequired,\n  ]),\n  timeToRead: PropTypes.number.isRequired,\n};\n\nexport default MarkdownPostDetails;\n"],"sourceRoot":""}